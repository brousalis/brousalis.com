---
layout: post
title: "Personal dotfiles and scripts"
date: 2012-05-25 20:34
comments: true
categories: [personal, lab]
---

I have spent about a year slowly configuring my personal set of dotfiles, or configuration settings. I've hosted them to share with everyone on <a href="http://github.com/brousalis/dotfiles">Github</a>. I have some pretty neat tricks I've picked up in quest for the perfect dev environment, and I'd like to share a few.

##Bootstrapping your config files
{% codeblock bootstrap.sh lang:bash https://github.com/brousalis/dotfiles/blob/master/bootstrap.sh github %}
#!/bin/bash

FOLDER="$HOME"/dotfiles

# install vim
if [ "$1" == "vim" ]
then
  source vim.sh    
  echo "Setup vim install"
fi

# dotfiles
cd      "$FOLDER"
ln -sf  "$FOLDER"/vimrc         "$HOME"/.vimrc
ln -sf  "$FOLDER"/bashrc        "$HOME"/.bashrc
ln -sf  "$FOLDER"/bash_profile  "$HOME"/.bash_profile
ln -sf  "$FOLDER"/vim           "$HOME"/.vim
ln -sf  "$FOLDER"/screenrc      "$HOME"/.screenrc
ln -sf  "$FOLDER"/tmuxconf      "$HOME"/.tmux.conf
ln -sf  "$FOLDER"/gitconfig     "$HOME"/.gitconfig
echo    "Setup symlinks"

# vim
mkdir -p "$HOME"/.vimbackup
mkdir -p "$HOME"/.vimtmp
echo "Setup vim temp"
{% endcodeblock %}

By running this file <span class="bash">./bootstrap.sh</span> it sets up symlinks between the home folder and the dotfiles folder. This puts them in their correct place and also makes modifying these files much easier.
<!-- more -->
##Using Dropbox
<a class="dropbox" href="http://dropbox.com">Dropbox</a>I have a laptop for work, my iMac at home, several development machines hosted on Xen slices, and several virtual machines I use for testing. These machines are composed of Mac and Debian operating systems. To keep maintance of my config files easier between these environments, I have the Github repo cloned inside of my ~/Dropbox folder.  By doing this, each time you make a chance it is automatically updated on each environment. 

##Aliases
There are some handy aliases in my bashrc file, particularly these:

{% codeblock bashrc lang:bash https://github.com/brousalis/dotfiles/blob/master/bashrc github %}
function bugscreen() { export BUG=$1; screen -R $1; }
function u() { NUM=${1:-1}; for (( start = 1; start <= $NUM; start++ )); do cd ..; done; }
alias gitrem="git ls-files --deleted | xargs git rm"
alias dsremove="find . -name .DS_Store -print0 | xargs -0 git rm --ignore-unmatch"
{% endcodeblock %}

<span class="bash">bugscreen 123456</span> loads a preconfigured gnu-screen, read more below.

<span class="bash">u 3</span> goes up 3 directories from where you are - can be any number.

<span class="bash">gitrem</span> removes files you may have forgot to git rm in a folder.

<span class="bash">dsremove</span> deletes all .DS_Store files from a directory.

##Preconfigured screens
Located in the /screen folder of my dotfiles repo is the <span class="bash">123456</span> file. This is an example of how to setup a screen session with preconfigured tabs. Then by typing:

{% codeblock lang:bash %}
bugscreen 123456
{% endcodeblock %}

This will load a new screen session with the tabs setup in the 123456 file.

##Updating VIM to 7.3
If you need to update VIM to 7.3, which is needed for some of the VIM plugins I use. This command runs the vim.sh file:

{% codeblock lang:bash %}
./bootstrap vim
{% endcodeblock %}

This shell script will modify your /etc/apt/sources file, update VIM to 7.3, and remove the sources from apt-sources. This will only work on a Linux machine, only tested on Debian.

##Pull requests
If you find any errors with my scripts or have any questions, feel free to make a pull request, post a comment below or <a href="mailto:brousapg(at)gmail.com">contact me</a>.
